플랫폼
이 사용자들에 의해서 서드파티(플랫폼 개발을 담당하는 자/기관이 아닌 자/기관)에 의해 개발된 것이 사용/유통될 수 있는 환경/기술을 의미한 다고 생각합니다.
온라인으로 옮겨가면서 이 서드파티도 별도의 그룹이 아닌 플랫폼 내에서 활동하는 사용자들 중의 하나인 상태이며, 플랫폼은 사용자들 사이에서 공급과 수요를 이끌어내어 사용자들간의 비지니스가 가능한 형태를 말하는 것 같습니다.

프레임워크
특정 형태의 프로그램 설계에 대한 청사진으로써, 완성된 프로그램이나 기능을 목표로 하는 것 보다는 일관된 방법론이나 설계를 제공하여, 프레임워크 사용자(개발자)가 구현하고자 하는 목표를 달성할 수 있도록 하는 것이라고 생각합니다.
이를 위해서 대체로, 설계에 필요한 기능(클래스, 함수)과 다양한 개발방법론들을 제공합니다.
완성된 도구가 아니라는 점에서 라이브러리와 차별된다고 생각합니다.
현실에서 보면 요즘 많이 나오는 DIY 제품에 해당하지 않을까 싶네요.

라이브러리
어떤 목표를 달성하거나 도와주기위한 기능의 집합(모음집)이라고 생각됩니다.
이는 프레임워크와 달리 완성된 형태이며, 라이브러리를 사용하는 사용자(개발자)에 의해서 라이브러리가 제공하는 기능들을 수정하거나 변경할 수 없습니다.(혹은 매우 어렵습니다.)
현실에서 보면 스패너, 스크류 드라이버와 같은 연장들에 해당하지 않을까요?

API
API는 Application Program Interface의 약자로 말 그대로 인터페이스를 의미합니다. 앞의 라이브러리도 이러한 API를 제공합니다. 서로 다른 목적으로 개발된 프로그램/라이브러리들의 특정 기능을 호출하기 위해서, 혹은 외부의 다른 프로그램이 개발된(하고있는) 프로그램/라이브러리의 기능을 사용할 수 있게 하기 위해서는 기능을 호출해야 하는 사용자를 위한 배려가 필요한 데, 이것이 API라고 생각합니다.
일종의 약속인 것으로, 같은 개발 환경을 사용할 경우 쉽게 사용할 수 있게 됩니다.
기능을 (온라인)서비스하거나 라이브러리로 제공하기 위해서는 기능을 호출할 수 있는 명세(API)도 같이 제공해야 사용할 수 있겠습니다.

참조 : https://hashcode.co.kr/questions/1838/%ED%94%8C%EB%9E%AB%ED%8F%BC-%ED%94%84%EB%A0%88%EC%9E%84%EC%9B%8C%ED%81%AC-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-api%EC%97%90-%EB%8C%80%ED%95%9C-%EC%9D%B4%ED%95%B4